V0-VF - general purpose registers (8 bit) - array
I - Index Register (16 bit)
PC - Program Counter (16 bit)
Stack - Array of 16-bit values that hold PC values
SP - holds the top of the stack (8 bit) - index to Stack array
DT - Delay Timer (8 bit)
ST - Sound Timer (8 bit)

Memory - 0x000-0xFFF (4K)

16 input keys - 0-9 & A-F
64x32 Monochrome Display Memory
* Use ROWS * Y + X to calculate index based on (x,y) coords

TODO:

Setup rendering loop
* ESC key to exit - DONE

Create instructions for IBM Logo:

00E0 - done
00EE - done
1NNN - done
2NNN - done
3XNN - done
4XNN - done
5XY0 - done
6XNN - done
7XNN - done
8XY0 - done
8XY1 - done
8XY2 - done
8XY3 - done
8XY4 - set VX = VX + VY (modifies VF in overflow unlike 7NNN)
8XY5 - set VX = VX - VY (modifies VF in underflow)
8XY6 - done (add option to set VX = VY?)
8XY7 - set VX = VY - VX (modifies VF in underflow)
8XYE - done (add option to set VX = VY?)
9XY0 - done
ANNN - done
BNNN - done (add option to use VX instead of V0?)
CXNN - done (not tested)
DXYN - done
EX9E - done (not tested)
EXA1 - done (not tested)
FX07 - set VX to current value of delay timer
FX15 - set delay timer to the value in VX
FX18 - set the sound timer to the value in VX
FX1E - add the value in VX to I
FX0A - wait for key
FX29 - set I to address of hex character in VX
FX33 - BCD conversion
FX55 - store values in V0-VX in memory starting at I
FX65 - store values in memory starting at I to V0-VX
